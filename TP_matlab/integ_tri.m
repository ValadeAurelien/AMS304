function int = integ_tri(x, y1, y2, y3, q_vec, gpts)

if (gpts==3)
    gauss_pts = [ 1/6, 1/6, 1/6 ; ...
                  2/3, 1/6, 1/6 ; ...
                  1/6, 2/3, 1/6 ];
else if (gpts==6)
    gauss_pts = [ 0.445948490915965, 0.445948490915965, 0.111690794839005 ; ...
                  0.445948490915965, 0.108103018168070, 0.111690794839005 ; ...
                  0.108103018168070, 0.445948490915965, 0.111690794839005 ; ...
                  0.091576213509771, 0.091576213509771, 0.054975871827661 ; ...
                  0.091576213509771, 0.816847572980458, 0.054975871827661 ; ...
                  0.816847572980458, 0.091576213509771, 0.054975871827661 ];
end

J = jac_transfo(y1, y2, y3);

int = 0;
for i=1:gpts
    yg = y_from_triref(y1, y2, y3, ... %% y dans R^3 au point ksi_g
                       gauss_pts(i, 1), ...
                       gauss_pts(i, 2));
    qg = y_from_triref(q_vec(1), q_vec(2) q_vec(3), ... %% valeur de q au point ksi_g
                       gauss_pts(i, 1), ...
                       gauss_pts(i, 2));
    
    int = int + gauss_pts(i, 3) * G(x, yg) * qg;
end